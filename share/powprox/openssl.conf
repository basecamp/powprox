# Pow Root CA
[ default ]
ca = pow-root-ca
dir = ${ENV::POWPROX_DIR}/ssl
POWPROX_SUBJECT_ALT_NAME = *.dev,*.test,*.xip.io  # Default for env var

# CA and server certificate requests
[ req ]
encrypt_key = no
default_bits = 2048
distinguished_name = server_distinguished_name

[ server_distinguished_name ]
organizationName_default = "Pow"
commonName_default = "Pow development server"

[ ca_reqext ]
basicConstraints      = critical,CA:true
keyUsage              = critical,keyCertSign,cRLSign
subjectKeyIdentifier  = hash

[ server_reqext ]
basicConstraints      = CA:FALSE
keyUsage              = critical,digitalSignature,keyEncipherment
extendedKeyUsage      = serverAuth
subjectKeyIdentifier  = hash
subjectAltName        = ${ENV::POWPROX_SUBJECT_ALT_NAME}

# Root CA operations
[ ca ]
default_ca      = root_ca

[ root_ca ]
certificate     = $dir/ca/$ca.crt
private_key     = $dir/ca/private/$ca.key
new_certs_dir   = $dir/certs
serial          = $dir/ca/db/$ca.crt.srl
crlnumber       = $dir/ca/db/$ca.crl.srl
database        = $dir/ca/db/$ca.db
RANDFILE        = $dir/.rand
policy          = policy_anything
unique_subject  = no # allow reissuing expired certs
default_days    = 1095
default_md      = sha256
copy_extensions = copy # copy X509 extensions (like SAN) from the CSR

[ policy_anything ]
countryName            = optional
stateOrProvinceName    = optional
localityName           = optional
organizationName       = optional
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

# Extensions
[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

[ server_ext ]
keyUsage                = critical,digitalSignature,keyEncipherment
basicConstraints        = CA:false
extendedKeyUsage        = serverAuth
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
